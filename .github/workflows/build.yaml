# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
  pull_request:
    branches:
      - main
      - '*'
    tags: [ 'v*.*.*' ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    strategy:
      matrix:
        python-version: [3.12.3]
        include:
          - image: hasanova2503/SER516-Team-Clever-auth
            dockerfile: auth/Dockerfile
          - image: hasanova2503/SER516-Team-Clever-FE
            dockerfile: react-ui/Dockerfile
          - image: hasanova2503/SER516-Team-Clever-adoptedWork
            dockerfile: adoptedWork/Dockerfile
          - image: hasanova2503/SER516-Team-Clever-burndown
            dockerfile: burndown-chart/Dockerfile
          - image: hasanova2503/SER516-Team-Clever-cruft
            dockerfile: cruft/Dockerfile
          - image: hasanova2503/SER516-Team-Clever-cycle-time
            dockerfile: cycle-time/Dockerfile
          - image: hasanova2503/SER516-Team-Clever-dev-focus
            dockerfile: dev-focus/Dockerfile
          - image: hasanova2503/SER516-Team-Clever-dot
            dockerfile: dot/Dockerfile
          - image: hasanova2503/SER516-Team-Clever-found_work
            dockerfile: found_work/Dockerfile
          - image: hasanova2503/SER516-Team-Clever-lead-time
            dockerfile: lead-time/Dockerfile
          - image: hasanova2503/SER516-Team-Clever-orchestrator
            dockerfile: orchestrator/Dockerfile
          - image: hasanova2503/SER516-Team-Clever-project
            dockerfile: project/Dockerfile
          - image: hasanova2503/SER516-Team-Clever-tech-debt
            dockerfile: tech-debt/Dockerfile
          - image: hasanova2503/SER516-Team-Clever-taigaProject
            dockerfile: taigaProject/Dockerfile
    runs-on: ubuntu-latest

    permissions:
      pages: write
      id-token: write

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Switch to Current Branch
        run: git checkout ${{ env.BRANCH }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          cd taigaProject
          find . -name "requirements.txt" -execdir pip install -r {} \;
          find . -name "setup.py" -execdir pip install -e . \;
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Java build
        run: find . -name "pom.xml" -execdir mvn clean install \;
      - name: Flake8 Installation
        run: pip install flake8
      - name: Run Flake8
        run: find . -name "requirements.txt" -exec bash -c '
            dir=$(dirname "{}")
            echo "--------In folder $dir-------"
            cd "$dir" && flake8 --max-complexity 10 . --exit-zero
          ' \;
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_ACCESS }}
          SONAR_TOKEN: ${{ secrets.SONAR_ACCESS }}
        with:
          projectBaseDir: taigaProject
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ matrix.image }}

      - name: Build and push Docker images
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

